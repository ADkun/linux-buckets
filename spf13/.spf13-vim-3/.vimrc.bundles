" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   This file imports the various plugins of spf13. If you
"   wish to alter which groups are imported, see vimrc.before.
"   If you wish to add or remove individual bundles, create
"   ~/.vimrc.bundles.local and `Bundle` or `UnBundle` as needed
"   from there.
"
"   You can find me at http://spf13.com
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }

    " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

    " Add an UnBundle command {
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }

" }

" Bundles {

    " Deps {
        Bundle 'https://github.com.cnpmjs.org/gmarik/vundle'
        Bundle 'https://github.com.cnpmjs.org/MarcWeber/vim-addon-mw-utils'
        Bundle 'https://github.com.cnpmjs.org/tomtom/tlib_vim'
        if executable('ag')
            Bundle 'https://github.com.cnpmjs.org/mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'https://github.com.cnpmjs.org/mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'https://github.com.cnpmjs.org/mileszs/ack.vim'
        endif
    " }

    " In your .vimrc.before.local file
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'writing', 'neocomplete', 'programming', 'php', 'ruby', 'python', 'javascript', 'html', 'misc', 'my']
    endif

    " To override all the included bundles, add the following to your
    " .vimrc.bundles.local file:
    "   let g:override_spf13_bundles = 1
    if !exists("g:override_spf13_bundles")

    " General {
        if count(g:spf13_bundle_groups, 'general')
            Bundle 'https://github.com.cnpmjs.org/scrooloose/nerdtree'
            Bundle 'https://github.com.cnpmjs.org/altercation/vim-colors-solarized'
            Bundle 'https://github.com.cnpmjs.org/spf13/vim-colors'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-surround'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-repeat'
            Bundle 'https://github.com.cnpmjs.org/rhysd/conflict-marker.vim'
            Bundle 'https://github.com.cnpmjs.org/jiangmiao/auto-pairs'
            Bundle 'https://github.com.cnpmjs.org/ctrlpvim/ctrlp.vim'
            Bundle 'https://github.com.cnpmjs.org/tacahiroy/ctrlp-funky'
            Bundle 'https://github.com.cnpmjs.org/terryma/vim-multiple-cursors'
            Bundle 'https://github.com.cnpmjs.org/vim-scripts/sessionman.vim'
            Bundle 'https://github.com.cnpmjs.org/matchit.zip'
            if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
                Bundle 'https://github.com.cnpmjs.org/Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
            elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
                Bundle 'https://github.com.cnpmjs.org/Lokaltog/vim-powerline'
            else
                Bundle 'https://github.com.cnpmjs.org/vim-airline/vim-airline'
                Bundle 'https://github.com.cnpmjs.org/vim-airline/vim-airline-themes'
            endif
            Bundle 'https://github.com.cnpmjs.org/powerline/fonts'
            Bundle 'https://github.com.cnpmjs.org/bling/vim-bufferline'
            Bundle 'https://github.com.cnpmjs.org/easymotion/vim-easymotion'
            Bundle 'https://github.com.cnpmjs.org/jistr/vim-nerdtree-tabs'
            Bundle 'https://github.com.cnpmjs.org/flazz/vim-colorschemes'
            Bundle 'https://github.com.cnpmjs.org/mbbill/undotree'
            Bundle 'https://github.com.cnpmjs.org/nathanaelkane/vim-indent-guides'
            if !exists('g:spf13_no_views')
                Bundle 'https://github.com.cnpmjs.org/vim-scripts/restore_view.vim'
            endif
            Bundle 'https://github.com.cnpmjs.org/mhinz/vim-signify'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-abolish.git'
            Bundle 'https://github.com.cnpmjs.org/osyo-manga/vim-over'
            Bundle 'https://github.com.cnpmjs.org/kana/vim-textobj-user'
            Bundle 'https://github.com.cnpmjs.org/kana/vim-textobj-indent'
            Bundle 'https://github.com.cnpmjs.org/gcmt/wildfire.vim'
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            Bundle 'https://github.com.cnpmjs.org/reedes/vim-litecorrect'
            Bundle 'https://github.com.cnpmjs.org/reedes/vim-textobj-sentence'
            Bundle 'https://github.com.cnpmjs.org/reedes/vim-textobj-quote'
            Bundle 'https://github.com.cnpmjs.org/reedes/vim-wordy'
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            Bundle 'https://github.com.cnpmjs.org/scrooloose/syntastic'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-fugitive'
            Bundle 'https://github.com.cnpmjs.org/mattn/webapi-vim'
            Bundle 'https://github.com.cnpmjs.org/mattn/gist-vim'
            Bundle 'https://github.com.cnpmjs.org/scrooloose/nerdcommenter'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-commentary'
            Bundle 'https://github.com.cnpmjs.org/godlygeek/tabular'
            Bundle 'https://github.com.cnpmjs.org/luochen1990/rainbow'
            if executable('ctags')
                Bundle 'https://github.com.cnpmjs.org/majutsushi/tagbar'
            endif
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'snipmate')
            Bundle 'https://github.com.cnpmjs.org/garbas/vim-snipmate'
            Bundle 'https://github.com.cnpmjs.org/honza/vim-snippets'
            " Source support_function.vim to support vim-snippets.
            if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
                source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
            endif
        elseif count(g:spf13_bundle_groups, 'youcompleteme')
            Bundle 'https://github.com.cnpmjs.org/Valloric/YouCompleteMe'
            Bundle 'https://github.com.cnpmjs.org/SirVer/ultisnips'
            Bundle 'https://github.com.cnpmjs.org/honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplcache')
            Bundle 'https://github.com.cnpmjs.org/Shougo/neocomplcache'
            Bundle 'https://github.com.cnpmjs.org/Shougo/neosnippet'
            Bundle 'https://github.com.cnpmjs.org/Shougo/neosnippet-snippets'
            Bundle 'https://github.com.cnpmjs.org/honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplete')
            Bundle 'https://github.com.cnpmjs.org/Shougo/neocomplete.vim.git'
            Bundle 'https://github.com.cnpmjs.org/Shougo/neosnippet'
            Bundle 'https://github.com.cnpmjs.org/Shougo/neosnippet-snippets'
            Bundle 'https://github.com.cnpmjs.org/honza/vim-snippets'
        endif
    " }

    " PHP {
        if count(g:spf13_bundle_groups, 'php')
            Bundle 'https://github.com.cnpmjs.org/spf13/PIV'
            Bundle 'https://github.com.cnpmjs.org/arnaud-lb/vim-php-namespace'
            Bundle 'https://github.com.cnpmjs.org/beyondwords/vim-twig'
        endif
    " }

    " Python {
        if count(g:spf13_bundle_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            Bundle 'https://github.com.cnpmjs.org/klen/python-mode'
            Bundle 'https://github.com.cnpmjs.org/yssource/python.vim'
            Bundle 'https://github.com.cnpmjs.org/python_match.vim'
            Bundle 'https://github.com.cnpmjs.org/pythoncomplete'
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            Bundle 'https://github.com.cnpmjs.org/elzr/vim-json'
            Bundle 'https://github.com.cnpmjs.org/groenewege/vim-less'
            Bundle 'https://github.com.cnpmjs.org/pangloss/vim-javascript'
            Bundle 'https://github.com.cnpmjs.org/briancollins/vim-jst'
            Bundle 'https://github.com.cnpmjs.org/kchmck/vim-coffee-script'
        endif
    " }

    " Scala {
        if count(g:spf13_bundle_groups, 'scala')
            Bundle 'https://github.com.cnpmjs.org/derekwyatt/vim-scala'
            Bundle 'https://github.com.cnpmjs.org/derekwyatt/vim-sbt'
            Bundle 'https://github.com.cnpmjs.org/xptemplate'
        endif
    " }

    " Haskell {
        if count(g:spf13_bundle_groups, 'haskell')
            Bundle 'https://github.com.cnpmjs.org/travitch/hasksyn'
            Bundle 'https://github.com.cnpmjs.org/dag/vim2hs'
            Bundle 'https://github.com.cnpmjs.org/Twinside/vim-haskellConceal'
            Bundle 'https://github.com.cnpmjs.org/Twinside/vim-haskellFold'
            Bundle 'https://github.com.cnpmjs.org/lukerandall/haskellmode-vim'
            Bundle 'https://github.com.cnpmjs.org/eagletmt/neco-ghc'
            Bundle 'https://github.com.cnpmjs.org/eagletmt/ghcmod-vim'
            Bundle 'https://github.com.cnpmjs.org/Shougo/vimproc.vim'
            Bundle 'https://github.com.cnpmjs.org/adinapoli/cumino'
            Bundle 'https://github.com.cnpmjs.org/bitc/vim-hdevtools'
        endif
    " }

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            Bundle 'https://github.com.cnpmjs.org/amirh/HTML-AutoCloseTag'
            Bundle 'https://github.com.cnpmjs.org/hail2u/vim-css3-syntax'
            Bundle 'https://github.com.cnpmjs.org/gorodinskiy/vim-coloresque'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-haml'
            Bundle 'https://github.com.cnpmjs.org/mattn/emmet-vim'
        endif
    " }

    " Ruby {
        if count(g:spf13_bundle_groups, 'ruby')
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif
    " }

    " Puppet {
        if count(g:spf13_bundle_groups, 'puppet')
            Bundle 'https://github.com.cnpmjs.org/rodjek/vim-puppet'
        endif
    " }

    " Go Lang {
        if count(g:spf13_bundle_groups, 'go')
            "Bundle 'https://github.com.cnpmjs.org/Blackrush/vim-gocode'
            Bundle 'https://github.com.cnpmjs.org/fatih/vim-go'
        endif
    " }

    " Elixir {
        if count(g:spf13_bundle_groups, 'elixir')
            Bundle 'https://github.com.cnpmjs.org/elixir-lang/vim-elixir'
            Bundle 'https://github.com.cnpmjs.org/carlosgaldino/elixir-snippets'
            Bundle 'https://github.com.cnpmjs.org/mattreduce/vim-mix'
        endif
    " }

    " Misc {
        if count(g:spf13_bundle_groups, 'misc')
            Bundle 'https://github.com.cnpmjs.org/rust-lang/rust.vim'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-markdown'
            Bundle 'https://github.com.cnpmjs.org/spf13/vim-preview'
            Bundle 'https://github.com.cnpmjs.org/tpope/vim-cucumber'
            Bundle 'https://github.com.cnpmjs.org/cespare/vim-toml'
            Bundle 'https://github.com.cnpmjs.org/quentindecock/vim-cucumber-align-pipes'
            Bundle 'https://github.com.cnpmjs.org/saltstack/salt-vim'
        endif
    " }
    " My {
       if count(g:spf13_bundle_groups, 'my')
           Bundle 'https://github.com.cnpmjs.org/junegunn/fzf.vim'
       endif
    " }

    endif

" }

" Use fork bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.fork"))
        source ~/.vimrc.bundles.fork
    endif
" }

" Use local bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.local"))
        source ~/.vimrc.bundles.local
    endif
" }
